apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: kube2iam
  name: kubernetes-kube2iam
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    k8s-app: kube2iam
  name: kubernetes-kube2iam
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
    verbs:
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: kube2iam
  name: kubernetes-kube2iam
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubernetes-kube2iam
subjects:
  - kind: ServiceAccount
    name: kubernetes-kube2iam
    namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: kube2iam
  name: kube2iam
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube2iam
  template:
    metadata:
      labels:
        k8s-app: kube2iam
    spec:
      containers:
        - name: kube2iam
          image: jtblin/kube2iam:${kube2iam_version}
          imagePullPolicy: IfNotPresent
          args:
            - --host-interface=cali+
            - --host-ip=$(HOST_IP)
            - --iptables=true
            - --app-port=8282
            - --base-role-arn=${worker_role_arn}
            #- --verbose
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 8282
          resources:
          securityContext:
            privileged: true
      hostNetwork: true
      serviceAccountName: kubernetes-kube2iam
  updateStrategy:
    type: RollingUpdate
