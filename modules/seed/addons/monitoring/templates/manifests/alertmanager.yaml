---
apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-config
  namespace: kube-system
data:
  alertmanager.yaml: ${alertmanager_config_b64}
---
apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-basic-auth
  namespace: kube-system
type: Opaque
data:
  auth: ${basic_auth_b64}
---
apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-tls
  namespace: kube-system
data:
  tls.crt: ${alertmanager_crt_b64}
  tls.key: ${alertmanager_key_b64}
type: kubernetes.io/tls
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/auth-realm: Authentication Required
    ingress.kubernetes.io/auth-secret: alertmanager-basic-auth
    ingress.kubernetes.io/auth-type: basic
  name: alertmanager
  namespace: kube-system
spec:
  tls:
  - secretName: alertmanager-tls
    hosts:
    - alertmanager.${ingress}
  rules:
  - host: alertmanager.${ingress}
    http:
      paths:
      - backend:
          serviceName: alertmanager-client
          servicePort: 9093
        path: /
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/name: "alertmanager"
    prometheus.io/port: "9093"
  name: alertmanager-client
  namespace: kube-system
  labels:
    app: alertmanager
    role: monitoring
spec:
  ports:
  - port: 9093
    name: metrics
  type: ClusterIP
  selector:
    app: alertmanager
    role: monitoring
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: kube-system
  labels:
    app: alertmanager
    role: monitoring
spec:
  ports:
  - port: 9093
    name: mesh
  type: ClusterIP
  # This is important! Without it the mech won't work.
  clusterIP: None
  selector:
    app: alertmanager
    role: monitoring
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: alertmanager
  namespace: kube-system
  labels:
    app: alertmanager
    role: monitoring
spec:
  updateStrategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
      role: monitoring
  serviceName: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
        role: monitoring
    spec:
      containers:
      - name: alertmanager
        image: quay.io/prometheus/alertmanager:v0.9.1
        imagePullPolicy: IfNotPresent
        command:
        - "sh"
        - "-c"
        args:
        - /bin/alertmanager
            -config.file=/etc/alertmanager/config/alertmanager.yaml
            -web.listen-address=:9093
            -web.external-url=https://alertmanager.${ingress}
            -mesh.listen-address=:6783
            -storage.path=/etc/alertmanager/data
            -mesh.peer="alertmanager-0.alertmanager.$${ALERTMANAGER_NAMESPACE}.svc"
            -mesh.peer="alertmanager-1.alertmanager.$${ALERTMANAGER_NAMESPACE}.svc"
            -log.level=debug
        env:
        - name: ALERTMANAGER_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 9093
          name: web
          protocol: TCP
        - containerPort: 6783
          name: mesh
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /api/v1/status
            port: web
            scheme: HTTP
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /api/v1/status
            port: web
            scheme: HTTP
          periodSeconds: 5
          timeoutSeconds: 3
          initialDelaySeconds: 3
          failureThreshold: 10
        resources:
          limits:
            memory: 60Mi
          requests:
            memory: 60Mi
        volumeMounts:
        - mountPath: /etc/alertmanager/config
          name: config
          readOnly: true
        - mountPath: /var/alertmanager/data
          name: alertmanager-db
          subPath: alertmanager-
      - name: alertmanager-config-reloader
        image: quay.io/coreos/configmap-reload:v0.0.1
        imagePullPolicy: IfNotPresent
        args:
        - -webhook-url=http://localhost:9093/-/reload
        - -volume-dir=/etc/alertmanager/config
        resources:
          limits:
            cpu: 5m
            memory: 10Mi
        volumeMounts:
        - mountPath: /etc/alertmanager/config
          name: config
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: config
        secret:
          secretName: alertmanager-config
  volumeClaimTemplates:
  - metadata:
      name: alertmanager-db
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${alertmanager_volume_size}

